@using Microsoft.AspNetCore.SignalR.Client
@page "/"
@inject NavigationManager NavMenu
@implements IAsyncDisposable

<div class="form-group">
    <label>
        User: <input @bind="userInput" />
    </label>
</div>
<div class="form-group">
    <label>
        Message: <input @bind="messageInput" size="50" />
    </label>
</div>
<button class="btn btn-primary" @onclick="Send" disabled="@(!IsConnected)">Send</button>

<hr />

<ul id="messagesList">
    @foreach (string message in messages) 
    {
        <li>@message</li>
    }
</ul>

@code {
    private HubConnection? hubConnection;
    private List<string> messages = new List<string>();
    private string? userInput;
    private string? messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavMenu.ToAbsoluteUri("/chathub"))
            .WithAutomaticReconnect()
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", (userInput, messageInput) =>
        {
            var encodedMsg = $"{userInput}: {messageInput}";
            messages.Add(encodedMsg);
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }

    private async Task Send()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("SendMessage", userInput, messageInput);
        }
    }

    public bool IsConnected => hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}